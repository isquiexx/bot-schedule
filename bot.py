# bot.py
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
from config import BOT_TOKEN, SCHEDULE_URL, MOPSCI_STICKERS
from parser import get_nearest_schedule
import random


async def send_mopsci_sticker(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–∫–µ—Ä —Å –º–æ–ø—Å–∏–∫–æ–º"""
    if MOPSCI_STICKERS:
        try:
            sticker_id = random.choice(MOPSCI_STICKERS)
            await update.message.reply_sticker(sticker_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∏–∫–µ—Ä–∞: {e}")
    else:
        # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –µ—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
        await update.message.reply_text("üê∂ –ú–æ–ø—Å–∏–∫ –æ–¥–æ–±—Ä—è–µ—Ç —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!")


async def today_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–±–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Å–æ —Å—Ç–∏–∫–µ—Ä–æ–º"""
    schedule_text = get_nearest_schedule(SCHEDULE_URL)
    await update.message.reply_text(schedule_text)
    await send_mopsci_sticker(update, context)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ '–±–æ—Ç–∞–Ω' –∏–ª–∏ '–±–æ—Ç' –≤ –ª—é–±–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ"""
    if not update.message or not update.message.text:
        return

    message_text = update.message.text.lower()
    bot_username = context.bot.username.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞
    has_mention = f"@{bot_username}" in message_text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ–≤–∞ "–±–æ—Ç–∞–Ω" –∏–ª–∏ "–±–æ—Ç" –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    has_botan = any(word in message_text for word in ["–±–æ—Ç–∞–Ω", "–±–æ—Ç"])

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–æ—Ç–∞ –µ—Å–ª–∏:
    # 1. –ï—Å—Ç—å –ø—Ä—è–º–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @username
    # 2. –ò–ª–∏ –µ—Å—Ç—å —Å–ª–æ–≤–∞ "–±–æ—Ç–∞–Ω" –∏–ª–∏ "–±–æ—Ç" –≤ –ª—é–±–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    if has_mention or has_botan:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
        await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")

        schedule_text = get_nearest_schedule(SCHEDULE_URL)
        await update.message.reply_text(schedule_text)
        await send_mopsci_sticker(update, context)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π"""
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ü§ì\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª—é–±–æ–º —á–∞—Ç–µ:\n"
        "‚Ä¢ '–ë–æ—Ç–∞–Ω' - –∏ —è –ø—Ä–∏—à–ª—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
        "‚Ä¢ '–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç–∞–Ω!'\n"
        "‚Ä¢ '–≠–π –±–æ—Ç–∞–Ω, –∫–∞–∫ –¥–µ–ª–∞?'\n"
        "‚Ä¢ '–ë–æ—Ç, –ø–æ–º–æ–≥–∏ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º'\n"
        "‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π /today\n\n"
        "–ì–ª–∞–≤–Ω–æ–µ - —Å–∫–∞–∂–∏ '–±–æ—Ç–∞–Ω' –∏–ª–∏ '–±–æ—Ç' üòâ\n"
        "–ò –ø–æ–ª—É—á–∏—à—å –º–∏–ª–æ–≥–æ –º–æ–ø—Å–∏–∫–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫! üê∂"
    )
    await update.message.reply_text(welcome_text)
    await send_mopsci_sticker(update, context)


async def welcome_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –≥—Ä—É–ø–ø—É"""
    for member in update.message.new_chat_members:
        if member.username == context.bot.username:
            welcome_text = (
                "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ü§ì\n\n"
                "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç:\n"
                "‚Ä¢ '–ë–æ—Ç–∞–Ω' - –∏ —è –ø—Ä–∏—à–ª—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ '–ë–æ—Ç–∞–Ω, –∫–∞–∫–∏–µ –ø–∞—Ä—ã?'\n"
                "‚Ä¢ –ò–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è @{context.bot.username}\n\n"
                "–†–∞–¥ –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º! üìö\n"
                "–ò –¥–∞, —É –º–µ–Ω—è –µ—Å—Ç—å –º–æ–ø—Å–∏–∫–∏! üê∂"
            )
            await update.message.reply_text(welcome_text)
            await send_mopsci_sticker(update, context)


def main():
    application = Application.builder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("today", today_command))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
    application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()


if __name__ == '__main__':
    main()